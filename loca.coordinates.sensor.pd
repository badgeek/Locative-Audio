#N canvas 769 138 946 866 10;
#X obj 302 566 outlet;
#X obj 39 273 receive fromSystem;
#X obj 39 845 send toGUI;
#X obj 39 326 route /location /compass;
#X msg 109 354 list /displayLabel5 compass heading: \$1 deg.;
#X obj 39 300 list trim;
#X obj 557 334 receive fromGUI;
#X obj 557 421 send toSystem;
#X msg 557 399 list /enableLocation \$1;
#X obj 557 356 list trim;
#X msg 494 781 list /setDistanceFilter \$1;
#X msg 523 811 list /getDistanceFilter;
#X obj 494 845 send toSystem;
#X obj 718 748 receive fromSystem;
#X obj 718 772 route list;
#X obj 718 797 route /distanceFilter;
#X text 488 674 you can get and set the "distance filter" value \,
which specifies how many meters to move before triggering the callback
(and sending messages into PD). Default is 1 Value of <=0 sets it to
"none" and all GPS updates trigger callback.;
#X floatatom 494 755 5 0 0 0 - - -, f 5;
#X floatatom 718 820 5 0 0 0 - - -, f 5;
#X text 37 18 NOTE: nothing works when this patch is open on your desktop/laptop...GPS
data is only received when running on the device.;
#X obj 557 377 route /gpsToggle;
#X text 31 104 when location data is enabled \, it is sent via a message
"/location" with 9 numbers. Location coordinate data in iOS is a 64-bit
floating point number (double) \; PureData is only 32-bit float \,
so sending that number into a patch loses resolution. However \, a
tweaky workaround (via 64-bit math in the iOS layer) is provided by
the last 4 numbers in the message.;
#X text 463 20 arg 0: latitude coordinate (as 32-bit float);
#X text 463 38 arg 1: longitude coordinate (as 32-bit float);
#X text 463 73 arg 3: horizontal accuracy (meters radius);
#X text 464 56 arg 2: altitude (meters);
#X text 465 93 arg 4: vertical (altitude) accuracy (meters radius)
;
#X text 464 113 arg 5: latitude "rough" = 64-bit value multiplied by
1000 and truncated to an integer before being sent into Pd;
#X text 466 166 arg 7: latitude "fine" = 64-bit value modded by 0.001
\, multiplied by 1e+06 \, and truncated to an integer \, before being
sent into Pd So the "rough" contains the significant digits up to the
thousandths place \, and the "fine" contains the next three significant
digits. An original coordinate value of 123.457 would be turned into
rough=123456 fine=789., f 64;
#X text 467 145 arg 6: longitude "rough" (as above);
#X msg 74 575 list /displayLabel2 altitude: \$1 m;
#X msg 39 521 list /displayLabel6 32-bit lat: \$1;
#X obj 39 407 unpack f f f f f f f f f;
#X text 466 255 arg 8: longitude "fine" (as above);
#X msg 56 549 list /displayLabel7 32-bit lon: \$1;
#X msg 127 654 list /displayLabel0 lat rough: \$1;
#X msg 143 683 list /displayLabel1 lon rough: \$1;
#X msg 162 710 list /displayLabel8 lat fine: \$1;
#X msg 180 737 list /displayLabel9 lon fine: \$1;
#X msg 109 631 list /displayLabel4 alt. accuracy: \$1 m;
#X msg 90 602 list /displayLabel3 position accuracy: \$1 m;
#X obj 217 493 / 1000;
#X obj 265 493 / 1000;
#X obj 302 522 pack f f f f;
#X msg 179 810 list /displayLabel10 precision-mode: \$1;
#X obj 179 787 v loca.precision-mode;
#X obj 180 762 t b;
#X obj 397 571 unpack f f;
#X msg 398 624 list /displayLabel11 lat-Pd: \$1;
#X msg 454 595 list /displayLabel12 lon-Pd: \$1;
#X obj 302 543 loca.precision-mode;
#X connect 1 0 5 0;
#X connect 3 0 32 0;
#X connect 3 1 4 0;
#X connect 4 0 2 0;
#X connect 5 0 3 0;
#X connect 6 0 9 0;
#X connect 8 0 7 0;
#X connect 9 0 20 0;
#X connect 10 0 12 0;
#X connect 11 0 12 0;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 15 0 18 0;
#X connect 17 0 10 0;
#X connect 20 0 8 0;
#X connect 30 0 2 0;
#X connect 31 0 2 0;
#X connect 32 0 31 0;
#X connect 32 1 34 0;
#X connect 32 2 30 0;
#X connect 32 3 40 0;
#X connect 32 4 39 0;
#X connect 32 5 35 0;
#X connect 32 5 41 0;
#X connect 32 6 36 0;
#X connect 32 6 42 0;
#X connect 32 7 37 0;
#X connect 32 7 43 2;
#X connect 32 8 38 0;
#X connect 32 8 43 3;
#X connect 34 0 2 0;
#X connect 35 0 2 0;
#X connect 36 0 2 0;
#X connect 37 0 2 0;
#X connect 38 0 2 0;
#X connect 38 0 46 0;
#X connect 39 0 2 0;
#X connect 40 0 2 0;
#X connect 41 0 43 0;
#X connect 42 0 43 1;
#X connect 43 0 50 0;
#X connect 44 0 2 0;
#X connect 45 0 44 0;
#X connect 46 0 45 0;
#X connect 47 0 48 0;
#X connect 47 1 49 0;
#X connect 48 0 2 0;
#X connect 49 0 2 0;
#X connect 50 0 0 0;
#X connect 50 0 47 0;
